---
language: shell
services:
  - docker

# Environment variables defined as part of the Travis CI repository configuration are:
# - DOCKER_ORG: the docker hub organization (or user) to which the image will be pushed
# - DOCKER_USER: the docker hub user used to log in to the docker hub
# - DOCKER_PASS: the password of this user
# - PYPI_TOKEN: the token associated to the pypi account for deployment. More information can be found here: https://pypi.org/help/#apitoken

jobs:
  include:
    # Unit tests are run
    - stage: 'Unit tests'
      if: type = push
      env:
        - BASE_IMAGE="${DOCKER_ORG}/nansat_base:latest-slim"
      install:
        - docker pull "${BASE_IMAGE}"
      # The COVERALLS_REPO_TOKEN environment variable is defined in the Travis CI repository settings:
      # https://travis-ci.org/nansencenter/nansat/settings
      script:
        - >
          docker run --rm
          -v "$(pwd):/src"
          -e "COVERALLS_REPO_TOKEN=$COVERALLS_REPO_TOKEN"
          -e "TRAVIS=true"
          -e "TRAVIS_JOB_ID=$TRAVIS_JOB_ID"
          -e "TRAVIS_BRANCH=$TRAVIS_BRANCH"
          -e "TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST"
          "${BASE_IMAGE}"
          bash -c "apt update && apt install -y g++ &&
          coverage run --omit=nansat/mappers/*,nansat/tests/*,nansat/nansatmap.py --source=nansat setup.py test && coveralls"

    - stage: 'Build docker images'
      name: 'Build standard image'
      if: type = pull_request OR tag IS present
      env:
        - IMAGE_NAME="${DOCKER_ORG}/nansat"
        - BASE_IMAGE="${DOCKER_ORG}/nansat_base:latest"
        - DOCKER_TMP_TAG='tmp'
      install:
        - docker pull "${IMAGE_NAME}" || true
      script:
        - >
          docker build .
          --cache-from "${IMAGE_NAME}"
          --build-arg "BASE_IMAGE=${BASE_IMAGE}"
          --build-arg "NANSAT_VERSION=${TRAVIS_TAG}"
          -t "${IMAGE_NAME}:${DOCKER_TMP_TAG}"
        - docker run --rm "${IMAGE_NAME}:${DOCKER_TMP_TAG}" python -c 'import nansat'
      before_deploy:
        - docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
      deploy:
        - provider: script
          on:
            tags: true
          script: /bin/bash scripts/docker_push.sh "${TRAVIS_TAG}" latest

    - name: 'Build slim image'
      if: type = pull_request OR tag IS present
      env:
        - IMAGE_NAME="${DOCKER_ORG}/nansat"
        - BASE_IMAGE="${DOCKER_ORG}/nansat_base:latest-slim"
        - DOCKER_TAG_SUFFIX='-slim'
        - DOCKER_TMP_TAG='tmp'
      install:
        - docker pull "${IMAGE_NAME}:latest${DOCKER_TAG_SUFFIX}" || true
      script:
        - >
          docker build .
          --cache-from "${IMAGE_NAME}:latest${DOCKER_TAG_SUFFIX}"
          --build-arg "BASE_IMAGE=${BASE_IMAGE}"
          -t "${IMAGE_NAME}:${DOCKER_TMP_TAG}"
        - docker run --rm "${IMAGE_NAME}:${DOCKER_TMP_TAG}" python -c 'import nansat'
      before_deploy:
        - docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
      deploy:
        - provider: script
          on:
            tags: true
          script: /bin/bash scripts/docker_push.sh "${TRAVIS_TAG}${DOCKER_TAG_SUFFIX}" "latest${DOCKER_TAG_SUFFIX}"

    - stage: 'PyPI deployment'
      if: tag IS present
      deploy:
        - provider: pypi
          user: "__token__"
          password: "${PYPI_TOKEN}"
          on:
            tags: true
...
